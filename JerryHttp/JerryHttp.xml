<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JerryHttp</name>
    </assembly>
    <members>
        <member name="T:HTTPRequest">
            <summary>
            Http请求
            </summary>
        </member>
        <member name="F:HTTPRequest.ERR_EXCEPTION">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="M:HTTPRequest.#ctor(System.String,System.String,System.Int32,System.Action{HTTPResponse})">
            <summary>
            构造函数, 构造GET请求
            </summary>
            <param name="url">url地址</param>
            <param name="timeout">超时时间</param>
            <param name="callback">回调函数</param>
        </member>
        <member name="M:HTTPRequest.SetPostData(System.String)">
            <summary>
            设置Post内容
            </summary>
            <param name="data">内容</param>
        </member>
        <member name="M:HTTPRequest.AddPostData(System.String,System.String)">
            <summary>
            添加Post内容
            </summary>
            <param name="key">key值</param>
            <param name="value">value值</param>
        </member>
        <member name="M:HTTPRequest.SetProxy(System.String,System.Int32)">
            <summary>
            设置代理
            </summary>
            <param name="ip">ip地址</param>
            <param name="port">端口号</param>
        </member>
        <member name="M:HTTPRequest.Start">
            <summary>
            发动请求
            </summary>
        </member>
        <member name="M:HTTPRequest.OnResponse(System.IAsyncResult)">
            <summary>
            处理读取Response
            </summary>
            <param name="result">异步回到result</param>
        </member>
        <member name="M:HTTPRequest.CallBack(System.Int32,System.String)">
            <summary>
            回调
            </summary>
            <param name="code">编码</param>
            <param name="content">内容</param>
        </member>
        <member name="M:HTTPRequest.CallBack(System.Int32,System.Byte[])">
            <summary>
            回调
            </summary>
            <param name="code">编码</param>
            <param name="content">内容</param>
        </member>
        <member name="M:HTTPRequest.WritePostData">
            <summary>
            写Post内容
            </summary>
        </member>
        <member name="M:HTTPRequest.UrlEncode(System.String)">
            <summary>
            URLEncode
            </summary>
            <returns>encode value</returns>
            <param name="value">要encode的值</param>
        </member>
        <member name="P:HTTPRequest.ContentType">
            <summary>
            设置ContentType
            </summary>
            <value>ContentType value</value>
        </member>
        <member name="T:HTTPDownLoad">
            <summary>
            <para>文件下载</para>
            <para>备注：内部IO太频繁影响下载速度，所以进度到外面去要</para>
            </summary>
        </member>
        <member name="F:HTTPDownLoad.isStop">
            <summary>
            被停止了
            </summary>
        </member>
        <member name="M:HTTPDownLoad.DownLoad">
            <summary>
            开启下载
            </summary>
        </member>
        <member name="M:HTTPDownLoad.StartDownLoad">
            <summary>
            开始下载
            </summary>
        </member>
        <member name="M:HTTPDownLoad.GetDownLoadFileSize(DownLoadConfig)">
            <summary>
            获取下载的文件大小
            </summary>
            <returns>文件大小</returns>
        </member>
        <member name="M:HTTPDownLoad.Close">
            <summary>
            关闭下载
            </summary>
        </member>
        <member name="P:HTTPDownLoad.Progress">
            <summary>
            下载进度
            </summary>
        </member>
        <member name="P:HTTPDownLoad.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:HTTPDownLoad.DownLoadStatus">
            <summary>
            下载状态
            </summary>
        </member>
        <member name="F:HTTPDownLoad.DownLoadStatus.DownLoadError">
            <summary>
            下载出错
            </summary>
        </member>
        <member name="F:HTTPDownLoad.DownLoadStatus.DownLoading">
            <summary>
            正在下载
            </summary>
        </member>
        <member name="F:HTTPDownLoad.DownLoadStatus.DownLoadFinish">
            <summary>
            下载完成
            </summary>
        </member>
        <member name="F:HTTPDownLoad.DownLoadStatus.DownLoadNone">
            <summary>
            未开始
            </summary>
        </member>
        <member name="F:MultiDownLoad.configs">
            <summary>
            准备工作的任务
            </summary>
        </member>
        <member name="F:MultiDownLoad.workingTask">
            <summary>
            正在工作的任务
            </summary>
        </member>
        <member name="F:MultiDownLoad.finishTask">
            <summary>
            完成的任务
            </summary>
        </member>
        <member name="F:MultiDownLoad.callback">
            <summary>
            进度回调
            </summary>
        </member>
        <member name="F:MultiDownLoad.working">
            <summary>
            是否已经启动
            </summary>
        </member>
        <member name="F:MultiDownLoad.processorCount">
            <summary>
            系统的核数
            </summary>
        </member>
        <member name="M:MultiDownLoad.SetCallback(HTTPDownLoad.DownFileCallback2)">
            <summary>
            设置回调
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:MultiDownLoad.AddOneConfig(DownLoadConfig)">
            <summary>
            增加一个配置
            </summary>
            <param name="config"></param>
        </member>
        <member name="P:MultiDownLoad.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="F:DownLoadConfig.retryCnt">
            <summary>
            重试次数，只有Multi有效
            </summary>
        </member>
        <member name="F:DownLoadConfig.fileSize">
            <summary>
            文件大小
            </summary>
        </member>
        <member name="T:HTTPResponse">
            <summary>
            HTTP返回内容
            </summary>
        </member>
        <member name="M:HTTPResponse.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:HTTPResponse.#ctor(System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="content">响应内容</param>
        </member>
        <member name="M:HTTPResponse.GetResponseText">
            <summary>
            获取响应内容
            </summary>
            <returns>响应文本内容</returns>
        </member>
        <member name="M:HTTPResponse.SaveResponseToFile(System.String)">
            <summary>
            将响应内容存储到文件
            </summary>
            <param name="fileName">文件名称</param>
        </member>
        <member name="P:HTTPResponse.StatusCode">
            <summary>
            获取状态码
            </summary>
            <value>状态码</value>
        </member>
        <member name="P:HTTPResponse.Error">
            <summary>
            获取错误消息
            </summary>
            <value>错误消息</value>
        </member>
    </members>
</doc>
